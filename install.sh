#!/bin/bash

set -e

show_help() {
  echo "Usage: $0 [--system-deps] [--enable-mlx]"
  echo "  --system-deps   Install system dependencies (git, make, python, cmake)"
  echo "  --enable-mlx    Install mlx for Apple Silicon macOS"
  exit 1
}

INSTALL_SYS_DEPS=false
ENABLE_MLX=false

for arg in "$@"; do
  case $arg in
    --system-deps)
      INSTALL_SYS_DEPS=true
      ;;
    --enable-mlx)
      ENABLE_MLX=true
      ;;
    --help|-h)
      show_help
      ;;
    *)
      echo "Unknown argument: $arg"
      show_help
      ;;
  esac
done

if $INSTALL_SYS_DEPS; then
  if [[ "$OSTYPE" == "darwin"* ]]; then
    echo "[INFO] Ê£ÄÊµãÂà∞ macOSÔºå‰ΩøÁî® Homebrew ÂÆâË£Ö‰æùËµñ..."
    if ! command -v brew >/dev/null 2>&1; then
      echo "[INFO] Êú™Ê£ÄÊµãÂà∞ HomebrewÔºåÊ≠£Âú®Ëá™Âä®ÂÆâË£Ö..."
      /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    fi
    brew install git make python cmake
  elif [[ -f /etc/debian_version ]]; then
    echo "[INFO] Ê£ÄÊµãÂà∞ Debian/UbuntuÔºå‰ΩøÁî® apt ÂÆâË£Ö‰æùËµñ..."
    sudo apt update
    sudo apt install -y git make python3 cmake
  elif [[ -f /etc/redhat-release ]]; then
    echo "[INFO] Ê£ÄÊµãÂà∞ CentOS/RHELÔºå‰ΩøÁî® yum ÂÆâË£Ö‰æùËµñ..."
    sudo yum install -y git make python3 cmake
  else
    echo "[ERROR] Êú™ËÉΩËá™Âä®ËØÜÂà´Êìç‰ΩúÁ≥ªÁªüÔºåËØ∑ÊâãÂä®ÂÆâË£Ö git make python3 cmake ÂêéÈáçËØï„ÄÇ"
    exit 1
  fi
  if ! command -v cmake >/dev/null 2>&1; then
    echo "[WARNING] cmake Â∑≤ÂÆâË£Ö‰ΩÜÊú™Âú® PATH ‰∏≠„ÄÇ"
    echo "ËØ∑Â∞Ü Homebrew ÁöÑ bin Ë∑ØÂæÑÂä†ÂÖ• PATHÔºå‰æãÂ¶ÇÔºö"
    echo '  export PATH="/opt/homebrew/bin:$PATH"'
    echo "Âπ∂ÂÜôÂÖ• ~/.zshrc Êàñ ~/.bash_profile Âêé source ‰∏Ä‰∏ãÔºåÊàñÈáçÂêØÁªàÁ´Ø„ÄÇ"
    echo "ÂèÇËÄÉ: https://docs.brew.sh/Homebrew-and-Python"
  else
    echo "[SUCCESS] Á≥ªÁªü‰æùËµñÂ∑≤ÂÆâË£ÖÂÆåÊàêÔºÅ"
  fi
fi

echo "\nÂºÄÂßãÂÆâË£Ö Python ‰æùËµñ...\n"
pip3 install -r requirements.txt
if [ $? -eq 0 ]; then
  echo "\n‚úÖ ‰æùËµñÂÆâË£ÖÂÆåÊàêÔºÅ"
else
  echo "\n‚ö†Ô∏è Êüê‰∫õ‰æùËµñÂÆâË£ÖÂ§±Ë¥•ÔºàÂ¶Ç auto-gptq/autoawqÔºâÔºåËØ∑ÂèÇËÄÉ README.md ÁöÑÂ∏∏ËßÅÈóÆÈ¢òËØ¥Êòé„ÄÇ"
fi

if $ENABLE_MLX; then
  if [[ "$(uname -s)" == "Darwin" && "$(uname -m)" == "arm64" ]]; then
    echo "üçé Detected Apple Silicon macOS - installing mlx for optimized inference..."
    python3 -m pip install mlx>=0.0.8
    if [ $? -eq 0 ]; then
      echo "‚úÖ mlx installed successfully for Apple Silicon optimization"
    else
      echo "‚ö†Ô∏è  Failed to install mlx"
    fi
  else
    echo "MLX only supports Apple Silicon macOS. Skipping mlx installation."
  fi
fi 